{"version":3,"sources":["components/Header.tsx","components/RecipesList.tsx","components/RecipesTypes.tsx","components/CheckboxList.tsx","components/Recipe.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","text","linkToRecipesList","RecipesList","recipeType","elementsOfRecipesList","useState","recipes","setRecipes","isLoading","setIsLoading","isError","setIsError","useEffect","getRecipesLinks","a","fetch","then","cakesLinks","Object","json","keys","catch","error","console","log","bordered","dataSource","map","recipeName","to","pathname","renderItem","item","Item","typesOfRecipes","translation","RecipesTypes","type","index","CheckboxList","data","Panel","Collapse","url","rating","Recipe","location","decodeURI","useLocation","replace","regex","exec","name","source","ingredients","tools","actions","recipe","setRecipe","getRecipe","toString","response","recipesList","forEach","className","size","block","href","target","rel","tooltips","disabled","value","ratingPlaceholder","title","InfoCircleTwoTone","defaultActiveKey","header","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef58fb85.chunk.js","sourcesContent":["const Header = ({text}: {text: string}) => {\r\n\treturn (\r\n\t\t<header>\r\n\t\t\t<h1>{text}</h1>\r\n\t\t</header>\r\n\t)\r\n}\r\n\r\nexport default Header;\r\n","import 'antd/dist/antd.css';\r\nimport '../index.css';\r\nimport { List } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst linkToRecipesList = ['https://raw.githubusercontent.com/naumowicz/przepisy/main/recipes/', '.json'];\r\n\r\nconst RecipesList = ({recipeType}: {recipeType: string}) => {\r\n\tlet elementsOfRecipesList: Array<string> = [];\r\n\r\n\tconst [recipes, setRecipes] = useState<Array<string>>([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [isError, setIsError]= useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRecipesLinks();\r\n\t}, [])\r\n\r\n\tconst getRecipesLinks = async () => {\r\n\t\tfetch(`${linkToRecipesList[0]}${recipeType}${linkToRecipesList[1]}`)\r\n\t\t.then(async (cakesLinks) => {\r\n\t\t\tsetIsLoading(false);\t\t\t\r\n\t\t\telementsOfRecipesList = Object.keys(await cakesLinks.json());\r\n\t\t\tsetRecipes(elementsOfRecipesList);\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tsetIsError(true);\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n\t}\r\n\r\n\tswitch (true) {\r\n\t\tcase isLoading:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>≈Åadowanie</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\tcase isError:\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>B≈ÇƒÖd!</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\tdefault:\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<List\r\n\t\t\t\t\tbordered\r\n\t\t\t\t\tdataSource={recipes.map((recipeName) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<Link to={{pathname: `#${recipeType}+${recipeName}`}}>{recipeName}</Link>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t\trenderItem={item => (\r\n\t\t\t\t\t\t<List.Item>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default RecipesList;\r\n","import RecipesList from './RecipesList';\r\n\r\nconst typesOfRecipes = ['cakes', 'desserts', 'meals'];\r\nconst translation = ['Ciasta', 'Desery', 'Posi≈Çki'];\r\n\r\nconst RecipesTypes = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{typesOfRecipes.map((type, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>{translation[index]}</h2>\r\n\t\t\t\t\t\t<RecipesList recipeType={type} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RecipesTypes;","import {List, Checkbox } from 'antd';\r\n\r\nconst CheckboxList = ({data}: {data: Array<string>}) => {\r\n\treturn (\r\n\t\t<List\r\n\t\t\tdataSource={data.map((item) => {\r\n\t\t\t\treturn <Checkbox>{item}</Checkbox>;\r\n\t\t\t})}\r\n\t\t\trenderItem={(item) => {\r\n\t\t\t\treturn <List.Item>{item}</List.Item>;\r\n\t\t\t}}\r\n\t\t></List>\r\n\t)\r\n};\r\n\r\nexport default CheckboxList;\r\n","import { useEffect, useState } from 'react';\r\nimport RecipeInterface from '../interfaces/recipeInterface';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { Button, Collapse, Rate, Tooltip } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {InfoCircleTwoTone} from '@ant-design/icons'\r\nimport CheckboxList from './CheckboxList';\r\n\r\nconst { Panel } = Collapse;\r\n\r\nconst url = ['https://raw.githubusercontent.com/naumowicz/przepisy/main/recipes/', '.json'];\r\n\r\nconst rating = ['nijakie üòï', 'zwyk≈Çe üôÑ', 'smaczne üëç', 'dobre üòÉ', 'Glamour! üòä'];\r\n\r\nconst tooltip = 'Oceny wystawiane sƒÖ surowo. 5 gwiazdek oznacza przepis za milion dolar√≥w, natomiast 2 gwiazdki (zwyk≈Çe) mo≈ºna oceniaƒá tak jak schabowe na obiad.'\r\n\r\nconst ratingPlaceholder = 2;\r\n\r\nconst Recipe = () => {\r\n\tlet location = decodeURI(useLocation().pathname).replace('/przepisy/', '').replace('/', '');\r\n\tconst regex = /#[a-z]+\\+/;\r\n\tconst recipeType = regex.exec(location);\r\n\tconst recipeName = location.replace(regex, '');\r\n\r\n\tconst [recipe, setRecipe] = useState<RecipeInterface>({name: '', source: '', rating: 2, ingredients: [''], tools: [''], actions: ['']});\r\n\r\n\tconst getRecipe = async () => {\r\n\t\t\r\n\t\tif(recipeType !== null) {\r\n\t\t\tconst response = await fetch(`${url[0]}${recipeType[0].toString().replace(/(#|\\+)/g, '')}${url[1]}`);\r\n\t\t\tconst recipesList = await response.json();\r\n\t\t\tObject.keys(recipesList).forEach(async name => {\r\n\t\t\t\tif (name === recipeName) {\r\n\t\t\t\t\tconst response = await fetch(recipesList[name]);\r\n\t\t\t\t\tsetRecipe(await response.json());\r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t}\t\t\t\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetRecipe();\r\n\t}, []);\r\n\t\r\n\treturn (\r\n\t\t<div className=\"recipe\">\r\n\t\t\t<Link to='/'>\r\n\t\t\t\t<Button size=\"large\" block>Powr√≥t</Button>\r\n\t\t\t</Link>\r\n\t\t\t<div>\r\n\t\t\t\t<h1>{recipe.name}</h1>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span>≈πr√≥d≈Ço: </span>\r\n\t\t\t\t<a href={recipe.source} target=\"_blank\" rel=\"noreferrer\">{recipe.source}</a>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<span>\r\n\t\t\t\t\t<span>Ocena: </span>\r\n\t\t\t\t\t<Rate tooltips={rating} disabled value={recipe.rating} />\r\n\t\t\t\t\t{recipe.rating ? <span className=\"ant-rate-text\">{rating[recipe.rating - 1]}</span> : <span className=\"ant-rate-text\">{rating[ratingPlaceholder - 1]}</span>}\r\n\t\t\t\t\t<span>\r\n\t\t\t\t\t\t<Tooltip\r\n\t\t\t\t\t\ttitle={tooltip}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<InfoCircleTwoTone />\r\n\t\t\t\t\t\t</Tooltip>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</span>\r\n\t\t\t</div>\r\n\t\t\t<Collapse defaultActiveKey={[\"1\", \"2\", \"3\"]}>\r\n\t\t\t\t<Panel header=\"Sk≈Çadniki\" key=\"1\">\r\n\t\t\t\t\t<CheckboxList data={recipe.ingredients}></CheckboxList>\r\n\t\t\t\t</Panel>\r\n\t\t\t\t<Panel header=\"Narzƒôdzia\" key=\"2\">\r\n\t\t\t\t\t<CheckboxList data={recipe.tools}></CheckboxList>\r\n\t\t\t\t</Panel>\r\n\t\t\t\t<Panel header=\"Przepis\" key=\"3\">\r\n\t\t\t\t\t<CheckboxList data={recipe.actions}></CheckboxList>\r\n\t\t\t\t</Panel>\r\n\t\t\t</Collapse>\r\n\t\t</div>\r\n\t)\r\n\t\r\n}\r\n\r\nexport default Recipe;\r\n","import Header from './components/Header'\r\nimport RecipesTypes from './components/RecipesTypes'\r\n\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\r\nimport Recipe from './components/Recipe';\r\n\r\nconst App = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header text=\"Lista przepis√≥w\"/>\r\n\t\t\t<Router>\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route exact path='/'>\r\n\t\t\t\t\t\t<RecipesTypes />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route exact path='/przepisy'>\r\n\t\t\t\t\t\t<RecipesTypes />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t\t<Route path=\"/*\">\r\n\t\t\t\t\t\t<Recipe />\r\n\t\t\t\t\t</Route>\r\n\t\t\t\t</Switch>\r\n\t\t\t</Router>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}